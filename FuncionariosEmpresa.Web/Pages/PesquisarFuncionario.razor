@page "/PesquisarFuncionario"
@inject FuncionariosApi funcionariosApi

<h2>Pesquisar Funcionário</h2>


<MudPaper Class="pa-4 mt-5 mb-5">
    <MudGrid>
        <MudItem xs="10">
            <MudTextField @bind-Value="cpf" Placeholder="Digite o cpf" Label="Pesquisar" Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" />
        </MudItem>
        <MudItem xs="2">
            <MudButton Variant=Variant.Filled Color=Color.Secondary OnClick="PesquisaFuncionario">
                Pesquisar
            </MudButton>
        </MudItem>
    </MudGrid>
</MudPaper>


@if (Funcionario is not null)
{
    <MudGrid>
        <MudItem xs="3">
            <CardFuncionarioPesquisa Funcionario="Funcionario" />
        </MudItem>

    </MudGrid>
}


@if (showAlert)
{
    <MudAlert Severity="Severity.Error">
        Cpf não localizado.
    </MudAlert>
}



@code {
    private string? cpf;
    private bool showAlert = false;

    public ExibeFuncionarioDto? Funcionario { get; set; }

    private async Task PesquisaFuncionario()
    {
        try
        {
            Funcionario = await funcionariosApi.GetFuncionarioPorCpfAsync(cpf!);         

            if (string.IsNullOrEmpty(cpf) || string.IsNullOrEmpty(Funcionario?.Cpf))
            {
                showAlert = true;
            }
            else
            {
                showAlert = false;
            }
        }
        catch
        {
            showAlert = true;
        }
    }
   
    

}